// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: agentsvr.exe

[
  uuid(A7B93C73-7B81-11D0-AC5F-00C04FD97575),
  version(2.0),
  helpstring("Microsoft Agent Server 2.0")
]
library AgentServerObjects
{
    // TLib :     // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface IAgent;
    interface IAgentUserInput;
    interface IAgentCommand;
    interface IAgentCommandEx;
    interface IAgentCommands;
    interface IAgentCommandsEx;
    interface IAgentSpeechInputProperties;
    interface IAgentAudioOutputProperties;
    interface IAgentAudioOutputPropertiesEx;
    interface IAgentPropertySheet;
    interface IAgentBalloon;
    interface IAgentBalloonEx;
    interface IAgentCharacter;
    interface IAgentCharacterEx;
    interface IAgentEx;
    interface IAgentNotifySink;
    interface IAgentNotifySinkEx;
    interface IAgentCommandWindow;

    [
      uuid(FD0B6205-B0F4-4596-B028-5CDB35D288C1),
      helpstring("Agent Class")
    ]
    coclass AgentServer {
        [default] interface IAgent;
    };

    [
      odl,
      uuid(A7B93C91-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgent Interface"),
      dual,
      oleautomation
    ]
    interface IAgent : IDispatch {
        [id(0x60020000)]
        HRESULT Load(
                        [in] VARIANT vLoadKey, 
                        [out] long* pdwCharID, 
                        [out] long* pdwReqID);
        [id(0x60020001)]
        HRESULT Unload([in] long dwCharID);
        [id(0x60020002)]
        HRESULT Register(
                        [in] IUnknown* punkNotifySink, 
                        [out] long* pdwSinkID);
        [id(0x60020003)]
        HRESULT Unregister([in] long dwSinkID);
        [id(0x60020004)]
        HRESULT GetCharacter(
                        [in] long dwCharID, 
                        [out] IDispatch** ppunkCharacter);
        [id(0x60020005)]
        HRESULT GetSuspended([out] long* pbSuspended);
    };

    [
      odl,
      uuid(A7B93C80-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentUserInput Interface"),
      dual,
      oleautomation
    ]
    interface IAgentUserInput : IDispatch {
        [id(0x60020000)]
        HRESULT GetCount([out] long* pdwCount);
        [id(0x60020001)]
        HRESULT GetItemID(
                        [in] long dwItemIndex, 
                        [out] long* pdwCommandID);
        [id(0x60020002)]
        HRESULT GetItemConfidence(
                        [in] long dwItemIndex, 
                        [out] long* plConfidence);
        [id(0x60020003)]
        HRESULT GetItemText(
                        [in] long dwItemIndex, 
                        [out] BSTR* pbszText);
        [id(0x60020004)]
        HRESULT GetAllItemData(
                        [out] VARIANT* pdwItemIndices, 
                        [out] VARIANT* plConfidences, 
                        [out] VARIANT* pbszText);
    };

    [
      odl,
      uuid(A7B93C83-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentCommand Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCommand : IDispatch {
        [id(0x60020000)]
        HRESULT SetCaption([in] BSTR bszCaption);
        [id(0x60020001)]
        HRESULT GetCaption([out] BSTR* pbszCaption);
        [id(0x60020002)]
        HRESULT SetVoice([in] BSTR bszVoice);
        [id(0x60020003)]
        HRESULT GetVoice([out] BSTR* pbszVoice);
        [id(0x60020004)]
        HRESULT SetEnabled([in] long bEnabled);
        [id(0x60020005)]
        HRESULT GetEnabled([out] long* pbEnabled);
        [id(0x60020006)]
        HRESULT SetVisible([in] long bVisible);
        [id(0x60020007)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x60020008)]
        HRESULT SetConfidenceThreshold([in] long lThreshold);
        [id(0x60020009)]
        HRESULT GetConfidenceThreshold([out] long* plThreshold);
        [id(0x6002000a)]
        HRESULT SetConfidenceText([in] BSTR bszTipText);
        [id(0x6002000b)]
        HRESULT GetConfidenceText([out] BSTR* pbszTipText);
        [id(0x6002000c)]
        HRESULT GetID([out] long* pdwID);
    };

    [
      odl,
      uuid(B0913412-3B44-11D1-ACBA-00C04FD97575),
      helpstring("IAgentCommandEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCommandEx : IAgentCommand {
        [id(0x60030000)]
        HRESULT SetHelpContextID([in] long ulID);
        [id(0x60030001)]
        HRESULT GetHelpContextID([out] long* pulID);
        [id(0x60030002)]
        HRESULT SetVoiceCaption([in] BSTR bszVoiceCaption);
        [id(0x60030003)]
        HRESULT GetVoiceCaption([out] BSTR* pbszVoiceCaption);
    };

    [
      odl,
      uuid(A7B93C85-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentCommands Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCommands : IDispatch {
        [id(0x60020000)]
        HRESULT GetCommand(
                        [in] long dwCommandID, 
                        [out] IUnknown** ppunkCommand);
        [id(0x60020001)]
        HRESULT GetCount([out] long* pdwCount);
        [id(0x60020002)]
        HRESULT SetCaption([in] BSTR bszCaption);
        [id(0x60020003)]
        HRESULT GetCaption([out] BSTR* pbszCaption);
        [id(0x60020004)]
        HRESULT SetVoice([in] BSTR bszVoice);
        [id(0x60020005)]
        HRESULT GetVoice([out] BSTR* pbszVoice);
        [id(0x60020006)]
        HRESULT SetVisible([in] long bVisible);
        [id(0x60020007)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x60020008)]
        HRESULT Add(
                        [in] BSTR bszCaption, 
                        [in] BSTR bszVoice, 
                        [in] long bEnabled, 
                        [in] long bVisible, 
                        [out] long* pdwID);
        [id(0x60020009)]
        HRESULT Insert(
                        [in] BSTR bszCaption, 
                        [in] BSTR bszVoice, 
                        [in] long bEnabled, 
                        [in] long bVisible, 
                        [in] long dwRefID, 
                        [in] long bBefore, 
                        [out] long* pdwID);
        [id(0x6002000a)]
        HRESULT Remove([in] long dwID);
        [id(0x6002000b)]
        HRESULT RemoveAll();
    };

    [
      odl,
      uuid(6BA90C00-3910-11D1-ACB3-00C04FD97575),
      helpstring("IAgentCommandsEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCommandsEx : IAgentCommands {
        [id(0x60030000)]
        HRESULT GetCommandEx(
                        [in] long dwCommandID, 
                        [out] IAgentCommandEx** ppCommandEx);
        [id(0x60030001)]
        HRESULT SetDefaultID([in] long dwID);
        [id(0x60030002)]
        HRESULT GetDefaultID([out] long* pdwID);
        [id(0x60030003)]
        HRESULT SetHelpContextID([in] long ulHelpID);
        [id(0x60030004)]
        HRESULT GetHelpContextID([out] long* pulHelpID);
        [id(0x60030005)]
        HRESULT SetFontName([in] BSTR bszFontName);
        [id(0x60030006)]
        HRESULT GetFontName([out] BSTR* pbszFontName);
        [id(0x60030007)]
        HRESULT SetFontSize([in] long lFontSize);
        [id(0x60030008)]
        HRESULT GetFontSize([out] long* lFontSize);
        [id(0x60030009)]
        HRESULT SetVoiceCaption([in] BSTR bszVoiceCaption);
        [id(0x6003000a)]
        HRESULT GetVoiceCaption([out] BSTR* bszVoiceCaption);
        [id(0x6003000b)]
        HRESULT AddEx(
                        [in] BSTR bszCaption, 
                        [in] BSTR bszVoice, 
                        [in] BSTR bszVoiceCaption, 
                        [in] long bEnabled, 
                        [in] long bVisible, 
                        [in] long ulHelpID, 
                        [out] long* pdwID);
        [id(0x6003000c)]
        HRESULT InsertEx(
                        [in] BSTR bszCaption, 
                        [in] BSTR bszVoice, 
                        [in] BSTR bszVoiceCaption, 
                        [in] long bEnabled, 
                        [in] long bVisible, 
                        [in] long ulHelpID, 
                        [in] long dwRefID, 
                        [in] long bBefore, 
                        [out] long* pdwID);
        [id(0x6003000d)]
        HRESULT SetGlobalVoiceCommandsEnabled([in] long bEnable);
        [id(0x6003000e)]
        HRESULT GetGlobalVoiceCommandsEnabled([out] long* pbEnabled);
    };

    [
      odl,
      uuid(A7B93C87-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentSpeechInputProperties Interface"),
      dual,
      oleautomation
    ]
    interface IAgentSpeechInputProperties : IDispatch {
        [id(0x60020000)]
        HRESULT GetInstalled([out] long* pbInstalled);
        [id(0x60020001)]
        HRESULT GetEnabled([out] long* pbEnabled);
        [id(0x60020002)]
        HRESULT GetHotKey([out] BSTR* pbszHotCharKey);
        [id(0x60020003)]
        HRESULT GetLCID([out] unsigned long* plcidCurrent);
        [id(0x60020004)]
        HRESULT GetEngine([out] BSTR* pbszEngine);
        [id(0x60020005)]
        HRESULT SetEngine([in] BSTR bszEngine);
        [id(0x60020006)]
        HRESULT GetListeningTip([out] long* pbListeningTip);
    };

    [
      odl,
      uuid(A7B93C89-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentAudioOutputProperties Interface"),
      dual,
      oleautomation
    ]
    interface IAgentAudioOutputProperties : IDispatch {
        [id(0x60020000)]
        HRESULT GetEnabled([out] long* pbEnabled);
        [id(0x60020001)]
        HRESULT GetUsingSoundEffects([out] long* pbUsingSoundEffects);
    };

    [
      odl,
      uuid(A7B93CA0-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentAudioOutputPropertiesEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentAudioOutputPropertiesEx : IAgentAudioOutputProperties {
        [id(0x60030000)]
        HRESULT GetStatus([out] long* plStatus);
    };

    [
      odl,
      uuid(A7B93C8B-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentPropertySheet Interface"),
      dual,
      oleautomation
    ]
    interface IAgentPropertySheet : IDispatch {
        [id(0x60020000)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x60020001)]
        HRESULT SetVisible([in] long bVisible);
        [id(0x60020002)]
        HRESULT GetPosition(
                        [out] long* plLeft, 
                        [out] long* plTop);
        [id(0x60020003)]
        HRESULT GetSize(
                        [out] long* plWidth, 
                        [out] long* plHeight);
        [id(0x60020004)]
        HRESULT GetPage([out] BSTR* pbszPage);
        [id(0x60020005)]
        HRESULT SetPage([in] BSTR bszPage);
    };

    [
      odl,
      uuid(A7B93C8D-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentBalloon Interface"),
      dual,
      oleautomation
    ]
    interface IAgentBalloon : IDispatch {
        [id(0x60020000)]
        HRESULT GetEnabled([out] long* pbEnabled);
        [id(0x60020001)]
        HRESULT GetNumLines([out] long* plLines);
        [id(0x60020002)]
        HRESULT GetNumCharsPerLine([out] long* plCharsPerLine);
        [id(0x60020003)]
        HRESULT GetFontName([out] BSTR* pbszFontName);
        [id(0x60020004)]
        HRESULT GetFontSize([out] long* plFontSize);
        [id(0x60020005)]
        HRESULT GetFontBold([out] long* pbFontBold);
        [id(0x60020006)]
        HRESULT GetFontItalic([out] long* pbFontItalic);
        [id(0x60020007)]
        HRESULT GetFontStrikethru([out] long* pbFontStrikethru);
        [id(0x60020008)]
        HRESULT GetFontUnderline([out] long* pbFontUnderline);
        [id(0x60020009)]
        HRESULT GetForeColor([out] long* plFGColor);
        [id(0x6002000a)]
        HRESULT GetBackColor([out] long* plBGColor);
        [id(0x6002000b)]
        HRESULT GetBorderColor([out] long* plBorderColor);
        [id(0x6002000c)]
        HRESULT SetVisible([in] long bVisible);
        [id(0x6002000d)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x6002000e)]
        HRESULT SetFontName([in] BSTR bszFontName);
        [id(0x6002000f)]
        HRESULT SetFontSize([in] long lFontSize);
        [id(0x60020010)]
        HRESULT SetFontCharSet([in] short sFontCharSet);
        [id(0x60020011)]
        HRESULT GetFontCharSet([out] short* psFontCharSet);
    };

    [
      odl,
      uuid(D7A6D440-8872-11D1-9EC6-00C04FD7081F),
      helpstring("IAgentBalloonEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentBalloonEx : IAgentBalloon {
        [id(0x60030000)]
        HRESULT SetStyle([in] long lStyle);
        [id(0x60030001)]
        HRESULT GetStyle([out] long* plStyle);
        [id(0x60030002)]
        HRESULT SetNumLines([in] long lLines);
        [id(0x60030003)]
        HRESULT SetNumCharsPerLine([in] long lCharsPerLine);
    };

    [
      odl,
      uuid(A7B93C8F-7B81-11D0-AC5F-00C04FD97575),
      helpstring("IAgentCharacter Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCharacter : IDispatch {
        [id(0x60020000)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x60020001)]
        HRESULT SetPosition(
                        [in] long lLeft, 
                        [in] long lTop);
        [id(0x60020002)]
        HRESULT GetPosition(
                        [out] long* plLeft, 
                        [out] long* plTop);
        [id(0x60020003)]
        HRESULT SetSize(
                        [in] long lWidth, 
                        [in] long lHeight);
        [id(0x60020004)]
        HRESULT GetSize(
                        [out] long* plWidth, 
                        [out] long* plHeight);
        [id(0x60020005)]
        HRESULT GetName([out] BSTR* pbszName);
        [id(0x60020006)]
        HRESULT GetDescription([out] BSTR* pbszDescription);
        [id(0x60020007)]
        HRESULT GetTTSSpeed([out] long* pdwSpeed);
        [id(0x60020008)]
        HRESULT GetTTSPitch([out] short* pwPitch);
        [id(0x60020009)]
        HRESULT Activate([in] short sState);
        [id(0x6002000a)]
        HRESULT SetIdleOn([in] long bOn);
        [id(0x6002000b)]
        HRESULT GetIdleOn([out] long* pbOn);
        [id(0x6002000c)]
        HRESULT Prepare(
                        [in] long dwType, 
                        [in] BSTR bszName, 
                        [in] long bQueue, 
                        [out] long* pdwReqID);
        [id(0x6002000d)]
        HRESULT Play(
                        [in] BSTR bszAnimation, 
                        [out] long* pdwReqID);
        [id(0x6002000e)]
        HRESULT Stop([in] long dwReqID);
        [id(0x6002000f)]
        HRESULT StopAll([in] long lTypes);
        [id(0x60020010)]
        HRESULT Wait(
                        [in] long dwReqID, 
                        [out] long* pdwReqID);
        [id(0x60020011)]
        HRESULT Interrupt(
                        [in] long dwReqID, 
                        [out] long* pdwReqID);
        [id(0x60020012)]
        HRESULT Show(
                        [in] long bFast, 
                        [out] long* pdwReqID);
        [id(0x60020013)]
        HRESULT Hide(
                        [in] long bFast, 
                        [out] long* pdwReqID);
        [id(0x60020014)]
        HRESULT Speak(
                        [in] BSTR bszText, 
                        [in] BSTR bszUrl, 
                        [out] long* pdwReqID);
        [id(0x60020015)]
        HRESULT MoveTo(
                        [in] short x, 
                        [in] short y, 
                        [in] long lSpeed, 
                        [out] long* pdwReqID);
        [id(0x60020016)]
        HRESULT GestureAt(
                        [in] short x, 
                        [in] short y, 
                        [out] long* pdwReqID);
        [id(0x60020017)]
        HRESULT GetMoveCause([out] long* pdwCause);
        [id(0x60020018)]
        HRESULT GetVisibilityCause([out] long* pdwCause);
        [id(0x60020019)]
        HRESULT HasOtherClients([out] long* plNumOtherClients);
        [id(0x6002001a)]
        HRESULT SetSoundEffectsOn([in] long bOn);
        [id(0x6002001b)]
        HRESULT GetSoundEffectsOn([out] long* pbOn);
        [id(0x6002001c)]
        HRESULT SetName([in] BSTR bszName);
        [id(0x6002001d)]
        HRESULT SetDescription([in] BSTR bszDescription);
        [id(0x6002001e)]
        HRESULT GetExtraData([out] BSTR* pbszExtraData);
    };

    [
      odl,
      uuid(98BBE491-2EED-11D1-ACAC-00C04FD97575),
      helpstring("IAgentCharacterEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCharacterEx : IAgentCharacter {
        [id(0x60030000)]
        HRESULT ShowPopupMenu(
                        [in] short x, 
                        [in] short y);
        [id(0x60030001)]
        HRESULT SetAutoPopupMenu([in] long bAutoPopupMenu);
        [id(0x60030002)]
        HRESULT GetAutoPopupMenu([out] long* pbAutoPopupMenu);
        [id(0x60030003)]
        HRESULT GetHelpFileName([out] BSTR* pbszName);
        [id(0x60030004)]
        HRESULT SetHelpFileName([in] BSTR bszName);
        [id(0x60030005)]
        HRESULT SetHelpModeOn([in] long bHelpModeOn);
        [id(0x60030006)]
        HRESULT GetHelpModeOn([out] long* pbHelpModeOn);
        [id(0x60030007)]
        HRESULT SetHelpContextID([in] long ulID);
        [id(0x60030008)]
        HRESULT GetHelpContextID([out] long* pulID);
        [id(0x60030009)]
        HRESULT GetActive([out] short* psState);
        [id(0x6003000a)]
        HRESULT Listen([in] long bListen);
        [id(0x6003000b)]
        HRESULT SetLanguageID([in] long langid);
        [id(0x6003000c)]
        HRESULT GetLanguageID([out] long* plangid);
        [id(0x6003000d)]
        HRESULT GetTTSModeID([out] BSTR* pbszModeID);
        [id(0x6003000e)]
        HRESULT SetTTSModeID([in] BSTR bszModeID);
        [id(0x6003000f)]
        HRESULT GetSRModeID([out] BSTR* pbszModeID);
        [id(0x60030010)]
        HRESULT SetSRModeID([in] BSTR bszModeID);
        [id(0x60030011)]
        HRESULT GetGUID([out] BSTR* pbszID);
        [id(0x60030012)]
        HRESULT GetOriginalSize(
                        [out] long* plWidth, 
                        [out] long* plHeight);
        [id(0x60030013)]
        HRESULT Think(
                        [in] BSTR bszText, 
                        [out] long* pdwReqID);
        [id(0x60030014)]
        HRESULT GetVersion(
                        [out] short* psMajor, 
                        [out] short* psMinor);
        [id(0x60030015)]
        HRESULT GetAnimationNames([out] IUnknown** punkEnum);
        [id(0x60030016)]
        HRESULT GetSRStatus([out] long* plStatus);
    };

    [
      odl,
      uuid(48D12BA0-5B77-11D1-9EC1-00C04FD7081F),
      helpstring("IAgentEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentEx : IAgent {
        [id(0x60030000)]
        HRESULT GetCharacterEx(
                        [in] long dwCharID, 
                        [out] IAgentCharacterEx** ppCharacterEx);
        [id(0x60030001)]
        HRESULT GetVersion(
                        [out] short* psMajor, 
                        [out] short* psMinor);
        [id(0x60030002)]
        HRESULT ShowDefaultCharacterProperties(
                        [in] short x, 
                        [in] short y, 
                        [in] long bUseDefaultPosition);
    };

    [
      odl,
      uuid(00D18159-8466-11D0-AC63-00C04FD97575),
      helpstring("IAgentNotifySink Interface"),
      dual,
      oleautomation
    ]
    interface IAgentNotifySink : IDispatch {
        [id(0x60020000)]
        HRESULT Command(
                        [in] long dwCommandID, 
                        [in] IUnknown* punkUserInput);
        [id(0x60020001)]
        HRESULT ActivateInputState(
                        [in] long dwCharID, 
                        [in] long bActivated);
        [id(0x60020002)]
        HRESULT Restart();
        [id(0x60020003)]
        HRESULT Shutdown();
        [id(0x60020004)]
        HRESULT VisibleState(
                        [in] long dwCharID, 
                        [in] long bVisible, 
                        [in] long dwCause);
        [id(0x60020005)]
        HRESULT Click(
                        [in] long dwCharID, 
                        [in] short fwKeys, 
                        [in] long x, 
                        [in] long y);
        [id(0x60020006)]
        HRESULT DblClick(
                        [in] long dwCharID, 
                        [in] short fwKeys, 
                        [in] long x, 
                        [in] long y);
        [id(0x60020007)]
        HRESULT DragStart(
                        [in] long dwCharID, 
                        [in] short fwKeys, 
                        [in] long x, 
                        [in] long y);
        [id(0x60020008)]
        HRESULT DragComplete(
                        [in] long dwCharID, 
                        [in] short fwKeys, 
                        [in] long x, 
                        [in] long y);
        [id(0x60020009)]
        HRESULT RequestStart([in] long dwRequestID);
        [id(0x6002000a)]
        HRESULT RequestComplete(
                        [in] long dwRequestID, 
                        [in] long hrStatus);
        [id(0x6002000b)]
        HRESULT BookMark([in] long dwBookMarkID);
        [id(0x6002000c)]
        HRESULT Idle(
                        [in] long dwCharID, 
                        [in] long bStart);
        [id(0x6002000d)]
        HRESULT Move(
                        [in] long dwCharID, 
                        [in] long x, 
                        [in] long y, 
                        [in] long dwCause);
        [id(0x6002000e)]
        HRESULT Size(
                        [in] long dwCharID, 
                        [in] long lWidth, 
                        [in] long lHeight);
        [id(0x6002000f)]
        HRESULT BalloonVisibleState(
                        [in] long dwCharID, 
                        [in] long bVisible);
    };

    [
      odl,
      uuid(08C75162-3C9C-11D1-91FE-00C04FD701A5),
      helpstring("IAgentNotifySinkEx Interface"),
      dual,
      oleautomation
    ]
    interface IAgentNotifySinkEx : IAgentNotifySink {
        [id(0x60030000)]
        HRESULT HelpComplete(
                        [in] long dwCharID, 
                        [in] long dwCommandID, 
                        [in] long dwCause);
        [id(0x60030001)]
        HRESULT ListeningState(
                        [in] long dwCharID, 
                        [in] long bListening, 
                        [in] long dwCause);
        [id(0x60030002)]
        HRESULT DefaultCharacterChange([in] BSTR bszGUID);
        [id(0x60030003)]
        HRESULT AgentPropertyChange();
        [id(0x60030004)]
        HRESULT ActiveClientChange(
                        [in] long dwCharID, 
                        [in] long lStatus);
    };

    [
      odl,
      uuid(6D0ECB23-9968-11D0-AC6E-00C04FD97575),
      helpstring("IAgentCommandWindow Interface"),
      dual,
      oleautomation
    ]
    interface IAgentCommandWindow : IDispatch {
        [id(0x60020000)]
        HRESULT SetVisible([in] long bVisible);
        [id(0x60020001)]
        HRESULT GetVisible([out] long* pbVisible);
        [id(0x60020002)]
        HRESULT GetPosition(
                        [out] long* plLeft, 
                        [out] long* plTop);
        [id(0x60020003)]
        HRESULT GetSize(
                        [out] long* plWidth, 
                        [out] long* plHeight);
    };
};
