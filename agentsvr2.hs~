-- Automatically generated by HaskellDirect (ihc.exe), version 0.21
-- Created: 00:41 ope, Monday 06 August, 2012
-- Command line: -o agentsvr2.hs -fno-export-list -d -dshow-passes --verbose agentsvr.IDL -fno-gen-variant-instances -fno-qualified-names

module Agentsvr2 where

import Prelude
import System.Win32.Com.Automation (IDispatch, outInt32, inVariant, method2, 
                   inInt32, method0, inIUnknown, method1, outIDispatch, outString, 
                   Variant, outVariant, method3, inString, outIUnknown, outWord32, 
                   inInt16, outInt16)
import System.Win32.Com (LIBID, mkLIBID, CLSID, mkCLSID, IID, mkIID, IUnknown)
import Data.Int (Int32, Int16)
import Data.Word (Word32)

libidAgentServerObjects :: LIBID
libidAgentServerObjects =
  mkLIBID "{A7B93C73-7B81-11D0-AC5F-00C04FD97575}"

-- --------------------------------------------------
-- 
-- coclass AgentServer
-- 
--   implements: IAgent
-- --------------------------------------------------
clsidAgentServer :: CLSID
clsidAgentServer = mkCLSID "{FD0B6205-B0F4-4596-B028-5CDB35D288C1}"

-- --------------------------------------------------
-- 
-- interface IAgent
-- 
-- --------------------------------------------------
data IAgent_ a = IAgent__ 
type IAgent a = IDispatch (IAgent_ a)
iidIAgent :: IID (IAgent ())
iidIAgent = mkIID "{A7B93C91-7B81-11D0-AC5F-00C04FD97575}"

load :: a1
     -> IAgent a0
     -> IO (Int32, Int32)
load vLoadKey =
  method2 "Load"
          [inInt32 vLoadKey]
          outInt32
          outInt32

unload :: Int32
       -> IAgent a0
       -> IO ()
unload dwCharID =
  method0 "Unload"
          [inInt32 dwCharID]

register :: IUnknown a1
         -> IAgent a0
         -> IO Int32
register punkNotifySink =
  method1 "Register"
          [inIUnknown punkNotifySink]
          outInt32

unregister :: Int32
           -> IAgent a0
           -> IO ()
unregister dwSinkID =
  method0 "Unregister"
          [inInt32 dwSinkID]

getCharacter :: Int32
             -> IAgent a0
             -> IO (IDispatch ())
getCharacter dwCharID =
  method1 "GetCharacter"
          [inInt32 dwCharID]
          outIDispatch

getSuspended :: IAgent a0
             -> IO Int32
getSuspended =
  method1 "GetSuspended"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentUserInput
-- 
-- --------------------------------------------------
data IAgentUserInput_ a = IAgentUserInput__ 
type IAgentUserInput a = IDispatch (IAgentUserInput_ a)
iidIAgentUserInput :: IID (IAgentUserInput ())
iidIAgentUserInput = mkIID "{A7B93C80-7B81-11D0-AC5F-00C04FD97575}"

getCount :: IAgentUserInput a0
         -> IO Int32
getCount =
  method1 "GetCount"
          []
          outInt32

getItemID :: Int32
          -> IAgentUserInput a0
          -> IO Int32
getItemID dwItemIndex =
  method1 "GetItemID"
          [inInt32 dwItemIndex]
          outInt32

getItemConfidence :: Int32
                  -> IAgentUserInput a0
                  -> IO Int32
getItemConfidence dwItemIndex =
  method1 "GetItemConfidence"
          [inInt32 dwItemIndex]
          outInt32

getItemText :: Int32
            -> IAgentUserInput a0
            -> IO String
getItemText dwItemIndex =
  method1 "GetItemText"
          [inInt32 dwItemIndex]
          outString

getAllItemData :: (Variant a1, Variant a2, Variant a3)
               => IAgentUserInput a0
               -> IO (a1, a2, a3)
getAllItemData =
  method3 "GetAllItemData"
          []
          outVariant
          outVariant
          outVariant

-- --------------------------------------------------
-- 
-- interface IAgentCommand
-- 
-- --------------------------------------------------
data IAgentCommand_ a = IAgentCommand__ 
type IAgentCommand a = IDispatch (IAgentCommand_ a)
iidIAgentCommand :: IID (IAgentCommand ())
iidIAgentCommand = mkIID "{A7B93C83-7B81-11D0-AC5F-00C04FD97575}"

setCaption :: String
           -> IAgentCommand a0
           -> IO ()
setCaption bszCaption =
  method0 "SetCaption"
          [inString bszCaption]

getCaption :: IAgentCommand a0
           -> IO String
getCaption =
  method1 "GetCaption"
          []
          outString

setVoice :: String
         -> IAgentCommand a0
         -> IO ()
setVoice bszVoice =
  method0 "SetVoice"
          [inString bszVoice]

getVoice :: IAgentCommand a0
         -> IO String
getVoice =
  method1 "GetVoice"
          []
          outString

setEnabled :: Int32
           -> IAgentCommand a0
           -> IO ()
setEnabled bEnabled =
  method0 "SetEnabled"
          [inInt32 bEnabled]

getEnabled :: IAgentCommand a0
           -> IO Int32
getEnabled =
  method1 "GetEnabled"
          []
          outInt32

setVisible :: Int32
           -> IAgentCommand a0
           -> IO ()
setVisible bVisible =
  method0 "SetVisible"
          [inInt32 bVisible]

getVisible :: IAgentCommand a0
           -> IO Int32
getVisible =
  method1 "GetVisible"
          []
          outInt32

setConfidenceThreshold :: Int32
                       -> IAgentCommand a0
                       -> IO ()
setConfidenceThreshold lThreshold =
  method0 "SetConfidenceThreshold"
          [inInt32 lThreshold]

getConfidenceThreshold :: IAgentCommand a0
                       -> IO Int32
getConfidenceThreshold =
  method1 "GetConfidenceThreshold"
          []
          outInt32

setConfidenceText :: String
                  -> IAgentCommand a0
                  -> IO ()
setConfidenceText bszTipText =
  method0 "SetConfidenceText"
          [inString bszTipText]

getConfidenceText :: IAgentCommand a0
                  -> IO String
getConfidenceText =
  method1 "GetConfidenceText"
          []
          outString

getID :: IAgentCommand a0
      -> IO Int32
getID =
  method1 "GetID"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentCommandEx
-- 
-- --------------------------------------------------
data IAgentCommandEx_ a = IAgentCommandEx__ 
type IAgentCommandEx a = IAgentCommand (IAgentCommandEx_ a)
iidIAgentCommandEx :: IID (IAgentCommandEx ())
iidIAgentCommandEx = mkIID "{B0913412-3B44-11D1-ACBA-00C04FD97575}"

setHelpContextID :: Int32
                 -> IAgentCommandEx a0
                 -> IO ()
setHelpContextID ulID =
  method0 "SetHelpContextID"
          [inInt32 ulID]

getHelpContextID :: IAgentCommandEx a0
                 -> IO Int32
getHelpContextID =
  method1 "GetHelpContextID"
          []
          outInt32

setVoiceCaption :: String
                -> IAgentCommandEx a0
                -> IO ()
setVoiceCaption bszVoiceCaption =
  method0 "SetVoiceCaption"
          [inString bszVoiceCaption]

getVoiceCaption :: IAgentCommandEx a0
                -> IO String
getVoiceCaption =
  method1 "GetVoiceCaption"
          []
          outString

-- --------------------------------------------------
-- 
-- interface IAgentCommands
-- 
-- --------------------------------------------------
data IAgentCommands_ a = IAgentCommands__ 
type IAgentCommands a = IDispatch (IAgentCommands_ a)
iidIAgentCommands :: IID (IAgentCommands ())
iidIAgentCommands = mkIID "{A7B93C85-7B81-11D0-AC5F-00C04FD97575}"

getCommand :: Int32
           -> IAgentCommands a0
           -> IO (IUnknown ())
getCommand dwCommandID =
  method1 "GetCommand"
          [inInt32 dwCommandID]
          outIUnknown

getCount0 :: IAgentCommands a0
          -> IO Int32
getCount0 =
  method1 "GetCount"
          []
          outInt32

setCaption0 :: String
            -> IAgentCommands a0
            -> IO ()
setCaption0 bszCaption =
  method0 "SetCaption"
          [inString bszCaption]

getCaption0 :: IAgentCommands a0
            -> IO String
getCaption0 =
  method1 "GetCaption"
          []
          outString

setVoice0 :: String
          -> IAgentCommands a0
          -> IO ()
setVoice0 bszVoice =
  method0 "SetVoice"
          [inString bszVoice]

getVoice0 :: IAgentCommands a0
          -> IO String
getVoice0 =
  method1 "GetVoice"
          []
          outString

setVisible0 :: Int32
            -> IAgentCommands a0
            -> IO ()
setVisible0 bVisible =
  method0 "SetVisible"
          [inInt32 bVisible]

getVisible0 :: IAgentCommands a0
            -> IO Int32
getVisible0 =
  method1 "GetVisible"
          []
          outInt32

add :: String
    -> String
    -> Int32
    -> Int32
    -> IAgentCommands a0
    -> IO Int32
add bszCaption bszVoice bEnabled bVisible =
  method1 "Add"
          [ inString bszCaption
          , inString bszVoice
          , inInt32 bEnabled
          , inInt32 bVisible
          ]
          outInt32

insert :: String
       -> String
       -> Int32
       -> Int32
       -> Int32
       -> Int32
       -> IAgentCommands a0
       -> IO Int32
insert bszCaption bszVoice bEnabled bVisible dwRefID bBefore =
  method1 "Insert"
          [ inString bszCaption
          , inString bszVoice
          , inInt32 bEnabled
          , inInt32 bVisible
          , inInt32 dwRefID
          , inInt32 bBefore
          ]
          outInt32

remove :: Int32
       -> IAgentCommands a0
       -> IO ()
remove dwID =
  method0 "Remove"
          [inInt32 dwID]

removeAll :: IAgentCommands a0
          -> IO ()
removeAll =
  method0 "RemoveAll"
          []

-- --------------------------------------------------
-- 
-- interface IAgentCommandsEx
-- 
-- --------------------------------------------------
data IAgentCommandsEx_ a = IAgentCommandsEx__ 
type IAgentCommandsEx a = IAgentCommands (IAgentCommandsEx_ a)
iidIAgentCommandsEx :: IID (IAgentCommandsEx ())
iidIAgentCommandsEx =
  mkIID "{6BA90C00-3910-11D1-ACB3-00C04FD97575}"

getCommandEx :: Int32
             -> IAgentCommandsEx a0
             -> IO (IAgentCommandEx ())
getCommandEx dwCommandID =
  method1 "GetCommandEx"
          [inInt32 dwCommandID]
          outIDispatch

setDefaultID :: Int32
             -> IAgentCommandsEx a0
             -> IO ()
setDefaultID dwID =
  method0 "SetDefaultID"
          [inInt32 dwID]

getDefaultID :: IAgentCommandsEx a0
             -> IO Int32
getDefaultID =
  method1 "GetDefaultID"
          []
          outInt32

setHelpContextID0 :: Int32
                  -> IAgentCommandsEx a0
                  -> IO ()
setHelpContextID0 ulHelpID =
  method0 "SetHelpContextID"
          [inInt32 ulHelpID]

getHelpContextID0 :: IAgentCommandsEx a0
                  -> IO Int32
getHelpContextID0 =
  method1 "GetHelpContextID"
          []
          outInt32

setFontName :: String
            -> IAgentCommandsEx a0
            -> IO ()
setFontName bszFontName =
  method0 "SetFontName"
          [inString bszFontName]

getFontName :: IAgentCommandsEx a0
            -> IO String
getFontName =
  method1 "GetFontName"
          []
          outString

setFontSize :: Int32
            -> IAgentCommandsEx a0
            -> IO ()
setFontSize lFontSize =
  method0 "SetFontSize"
          [inInt32 lFontSize]

getFontSize :: IAgentCommandsEx a0
            -> IO Int32
getFontSize =
  method1 "GetFontSize"
          []
          outInt32

setVoiceCaption0 :: String
                 -> IAgentCommandsEx a0
                 -> IO ()
setVoiceCaption0 bszVoiceCaption =
  method0 "SetVoiceCaption"
          [inString bszVoiceCaption]

getVoiceCaption0 :: IAgentCommandsEx a0
                 -> IO String
getVoiceCaption0 =
  method1 "GetVoiceCaption"
          []
          outString

addEx :: String
      -> String
      -> String
      -> Int32
      -> Int32
      -> Int32
      -> IAgentCommandsEx a0
      -> IO Int32
addEx bszCaption bszVoice bszVoiceCaption bEnabled bVisible ulHelpID =
  method1 "AddEx"
          [ inString bszCaption
          , inString bszVoice
          , inString bszVoiceCaption
          , inInt32 bEnabled
          , inInt32 bVisible
          , inInt32 ulHelpID
          ]
          outInt32

insertEx :: String
         -> String
         -> String
         -> Int32
         -> Int32
         -> Int32
         -> Int32
         -> Int32
         -> IAgentCommandsEx a0
         -> IO Int32
insertEx bszCaption bszVoice bszVoiceCaption bEnabled bVisible ulHelpID dwRefID bBefore =
  method1 "InsertEx"
          [ inString bszCaption
          , inString bszVoice
          , inString bszVoiceCaption
          , inInt32 bEnabled
          , inInt32 bVisible
          , inInt32 ulHelpID
          , inInt32 dwRefID
          , inInt32 bBefore
          ]
          outInt32

setGlobalVoiceCommandsEnabled :: Int32
                              -> IAgentCommandsEx a0
                              -> IO ()
setGlobalVoiceCommandsEnabled bEnable =
  method0 "SetGlobalVoiceCommandsEnabled"
          [inInt32 bEnable]

getGlobalVoiceCommandsEnabled :: IAgentCommandsEx a0
                              -> IO Int32
getGlobalVoiceCommandsEnabled =
  method1 "GetGlobalVoiceCommandsEnabled"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentSpeechInputProperties
-- 
-- --------------------------------------------------
data IAgentSpeechInputProperties_ a = IAgentSpeechInputProperties__
                                        
type IAgentSpeechInputProperties a = IDispatch (IAgentSpeechInputProperties_ a)
iidIAgentSpeechInputProperties :: IID (IAgentSpeechInputProperties ())
iidIAgentSpeechInputProperties =
  mkIID "{A7B93C87-7B81-11D0-AC5F-00C04FD97575}"

getInstalled :: IAgentSpeechInputProperties a0
             -> IO Int32
getInstalled =
  method1 "GetInstalled"
          []
          outInt32

getEnabled0 :: IAgentSpeechInputProperties a0
            -> IO Int32
getEnabled0 =
  method1 "GetEnabled"
          []
          outInt32

getHotKey :: IAgentSpeechInputProperties a0
          -> IO String
getHotKey =
  method1 "GetHotKey"
          []
          outString

getLCID :: IAgentSpeechInputProperties a0
        -> IO Word32
getLCID =
  method1 "GetLCID"
          []
          outWord32

getEngine :: IAgentSpeechInputProperties a0
          -> IO String
getEngine =
  method1 "GetEngine"
          []
          outString

setEngine :: String
          -> IAgentSpeechInputProperties a0
          -> IO ()
setEngine bszEngine =
  method0 "SetEngine"
          [inString bszEngine]

getListeningTip :: IAgentSpeechInputProperties a0
                -> IO Int32
getListeningTip =
  method1 "GetListeningTip"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentAudioOutputProperties
-- 
-- --------------------------------------------------
data IAgentAudioOutputProperties_ a = IAgentAudioOutputProperties__
                                        
type IAgentAudioOutputProperties a = IDispatch (IAgentAudioOutputProperties_ a)
iidIAgentAudioOutputProperties :: IID (IAgentAudioOutputProperties ())
iidIAgentAudioOutputProperties =
  mkIID "{A7B93C89-7B81-11D0-AC5F-00C04FD97575}"

getEnabled1 :: IAgentAudioOutputProperties a0
            -> IO Int32
getEnabled1 =
  method1 "GetEnabled"
          []
          outInt32

getUsingSoundEffects :: IAgentAudioOutputProperties a0
                     -> IO Int32
getUsingSoundEffects =
  method1 "GetUsingSoundEffects"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentAudioOutputPropertiesEx
-- 
-- --------------------------------------------------
data IAgentAudioOutputPropertiesEx_ a = IAgentAudioOutputPropertiesEx__
                                          
type IAgentAudioOutputPropertiesEx a = IAgentAudioOutputProperties (IAgentAudioOutputPropertiesEx_ a)
iidIAgentAudioOutputPropertiesEx :: IID (IAgentAudioOutputPropertiesEx ())
iidIAgentAudioOutputPropertiesEx =
  mkIID "{A7B93CA0-7B81-11D0-AC5F-00C04FD97575}"

getStatus :: IAgentAudioOutputPropertiesEx a0
          -> IO Int32
getStatus =
  method1 "GetStatus"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentPropertySheet
-- 
-- --------------------------------------------------
data IAgentPropertySheet_ a = IAgentPropertySheet__ 
type IAgentPropertySheet a = IDispatch (IAgentPropertySheet_ a)
iidIAgentPropertySheet :: IID (IAgentPropertySheet ())
iidIAgentPropertySheet =
  mkIID "{A7B93C8B-7B81-11D0-AC5F-00C04FD97575}"

getVisible1 :: IAgentPropertySheet a0
            -> IO Int32
getVisible1 =
  method1 "GetVisible"
          []
          outInt32

setVisible1 :: Int32
            -> IAgentPropertySheet a0
            -> IO ()
setVisible1 bVisible =
  method0 "SetVisible"
          [inInt32 bVisible]

getPosition :: IAgentPropertySheet a0
            -> IO (Int32, Int32)
getPosition =
  method2 "GetPosition"
          []
          outInt32
          outInt32

getSize :: IAgentPropertySheet a0
        -> IO (Int32, Int32)
getSize =
  method2 "GetSize"
          []
          outInt32
          outInt32

getPage :: IAgentPropertySheet a0
        -> IO String
getPage =
  method1 "GetPage"
          []
          outString

setPage :: String
        -> IAgentPropertySheet a0
        -> IO ()
setPage bszPage =
  method0 "SetPage"
          [inString bszPage]

-- --------------------------------------------------
-- 
-- interface IAgentBalloon
-- 
-- --------------------------------------------------
data IAgentBalloon_ a = IAgentBalloon__ 
type IAgentBalloon a = IDispatch (IAgentBalloon_ a)
iidIAgentBalloon :: IID (IAgentBalloon ())
iidIAgentBalloon = mkIID "{A7B93C8D-7B81-11D0-AC5F-00C04FD97575}"

getEnabled2 :: IAgentBalloon a0
            -> IO Int32
getEnabled2 =
  method1 "GetEnabled"
          []
          outInt32

getNumLines :: IAgentBalloon a0
            -> IO Int32
getNumLines =
  method1 "GetNumLines"
          []
          outInt32

getNumCharsPerLine :: IAgentBalloon a0
                   -> IO Int32
getNumCharsPerLine =
  method1 "GetNumCharsPerLine"
          []
          outInt32

getFontName0 :: IAgentBalloon a0
             -> IO String
getFontName0 =
  method1 "GetFontName"
          []
          outString

getFontSize0 :: IAgentBalloon a0
             -> IO Int32
getFontSize0 =
  method1 "GetFontSize"
          []
          outInt32

getFontBold :: IAgentBalloon a0
            -> IO Int32
getFontBold =
  method1 "GetFontBold"
          []
          outInt32

getFontItalic :: IAgentBalloon a0
              -> IO Int32
getFontItalic =
  method1 "GetFontItalic"
          []
          outInt32

getFontStrikethru :: IAgentBalloon a0
                  -> IO Int32
getFontStrikethru =
  method1 "GetFontStrikethru"
          []
          outInt32

getFontUnderline :: IAgentBalloon a0
                 -> IO Int32
getFontUnderline =
  method1 "GetFontUnderline"
          []
          outInt32

getForeColor :: IAgentBalloon a0
             -> IO Int32
getForeColor =
  method1 "GetForeColor"
          []
          outInt32

getBackColor :: IAgentBalloon a0
             -> IO Int32
getBackColor =
  method1 "GetBackColor"
          []
          outInt32

getBorderColor :: IAgentBalloon a0
               -> IO Int32
getBorderColor =
  method1 "GetBorderColor"
          []
          outInt32

setVisible2 :: Int32
            -> IAgentBalloon a0
            -> IO ()
setVisible2 bVisible =
  method0 "SetVisible"
          [inInt32 bVisible]

getVisible2 :: IAgentBalloon a0
            -> IO Int32
getVisible2 =
  method1 "GetVisible"
          []
          outInt32

setFontName0 :: String
             -> IAgentBalloon a0
             -> IO ()
setFontName0 bszFontName =
  method0 "SetFontName"
          [inString bszFontName]

setFontSize0 :: Int32
             -> IAgentBalloon a0
             -> IO ()
setFontSize0 lFontSize =
  method0 "SetFontSize"
          [inInt32 lFontSize]

setFontCharSet :: Int16
               -> IAgentBalloon a0
               -> IO ()
setFontCharSet sFontCharSet =
  method0 "SetFontCharSet"
          [inInt16 sFontCharSet]

getFontCharSet :: IAgentBalloon a0
               -> IO Int16
getFontCharSet =
  method1 "GetFontCharSet"
          []
          outInt16

-- --------------------------------------------------
-- 
-- interface IAgentBalloonEx
-- 
-- --------------------------------------------------
data IAgentBalloonEx_ a = IAgentBalloonEx__ 
type IAgentBalloonEx a = IAgentBalloon (IAgentBalloonEx_ a)
iidIAgentBalloonEx :: IID (IAgentBalloonEx ())
iidIAgentBalloonEx = mkIID "{D7A6D440-8872-11D1-9EC6-00C04FD7081F}"

setStyle :: Int32
         -> IAgentBalloonEx a0
         -> IO ()
setStyle lStyle =
  method0 "SetStyle"
          [inInt32 lStyle]

getStyle :: IAgentBalloonEx a0
         -> IO Int32
getStyle =
  method1 "GetStyle"
          []
          outInt32

setNumLines :: Int32
            -> IAgentBalloonEx a0
            -> IO ()
setNumLines lLines =
  method0 "SetNumLines"
          [inInt32 lLines]

setNumCharsPerLine :: Int32
                   -> IAgentBalloonEx a0
                   -> IO ()
setNumCharsPerLine lCharsPerLine =
  method0 "SetNumCharsPerLine"
          [inInt32 lCharsPerLine]

-- --------------------------------------------------
-- 
-- interface IAgentCharacter
-- 
-- --------------------------------------------------
data IAgentCharacter_ a = IAgentCharacter__ 
type IAgentCharacter a = IDispatch (IAgentCharacter_ a)
iidIAgentCharacter :: IID (IAgentCharacter ())
iidIAgentCharacter = mkIID "{A7B93C8F-7B81-11D0-AC5F-00C04FD97575}"

getVisible3 :: IAgentCharacter a0
            -> IO Int32
getVisible3 =
  method1 "GetVisible"
          []
          outInt32

setPosition :: Int32
            -> Int32
            -> IAgentCharacter a0
            -> IO ()
setPosition lLeft lTop =
  method0 "SetPosition"
          [ inInt32 lLeft
          , inInt32 lTop
          ]

getPosition0 :: IAgentCharacter a0
             -> IO (Int32, Int32)
getPosition0 =
  method2 "GetPosition"
          []
          outInt32
          outInt32

setSize :: Int32
        -> Int32
        -> IAgentCharacter a0
        -> IO ()
setSize lWidth lHeight =
  method0 "SetSize"
          [ inInt32 lWidth
          , inInt32 lHeight
          ]

getSize0 :: IAgentCharacter a0
         -> IO (Int32, Int32)
getSize0 =
  method2 "GetSize"
          []
          outInt32
          outInt32

getName :: IAgentCharacter a0
        -> IO String
getName =
  method1 "GetName"
          []
          outString

getDescription :: IAgentCharacter a0
               -> IO String
getDescription =
  method1 "GetDescription"
          []
          outString

getTTSSpeed :: IAgentCharacter a0
            -> IO Int32
getTTSSpeed =
  method1 "GetTTSSpeed"
          []
          outInt32

getTTSPitch :: IAgentCharacter a0
            -> IO Int16
getTTSPitch =
  method1 "GetTTSPitch"
          []
          outInt16

activate :: Int16
         -> IAgentCharacter a0
         -> IO ()
activate sState =
  method0 "Activate"
          [inInt16 sState]

setIdleOn :: Int32
          -> IAgentCharacter a0
          -> IO ()
setIdleOn bOn =
  method0 "SetIdleOn"
          [inInt32 bOn]

getIdleOn :: IAgentCharacter a0
          -> IO Int32
getIdleOn =
  method1 "GetIdleOn"
          []
          outInt32

prepare :: Int32
        -> String
        -> Int32
        -> IAgentCharacter a0
        -> IO Int32
prepare dwType bszName bQueue =
  method1 "Prepare"
          [ inInt32 dwType
          , inString bszName
          , inInt32 bQueue
          ]
          outInt32

play :: String
     -> IAgentCharacter a0
     -> IO Int32
play bszAnimation =
  method1 "Play"
          [inString bszAnimation]
          outInt32

stop :: Int32
     -> IAgentCharacter a0
     -> IO ()
stop dwReqID =
  method0 "Stop"
          [inInt32 dwReqID]

stopAll :: Int32
        -> IAgentCharacter a0
        -> IO ()
stopAll lTypes =
  method0 "StopAll"
          [inInt32 lTypes]

wait :: Int32
     -> IAgentCharacter a0
     -> IO Int32
wait dwReqID =
  method1 "Wait"
          [inInt32 dwReqID]
          outInt32

interrupt :: Int32
          -> IAgentCharacter a0
          -> IO Int32
interrupt dwReqID =
  method1 "Interrupt"
          [inInt32 dwReqID]
          outInt32

show :: Int32
     -> IAgentCharacter a0
     -> IO Int32
show bFast =
  method1 "Show"
          [inInt32 bFast]
          outInt32

hide :: Int32
     -> IAgentCharacter a0
     -> IO Int32
hide bFast =
  method1 "Hide"
          [inInt32 bFast]
          outInt32

speak :: String
      -> String
      -> IAgentCharacter a0
      -> IO Int32
speak bszText bszUrl =
  method1 "Speak"
          [ inString bszText
          , inString bszUrl
          ]
          outInt32

moveTo :: Int16
       -> Int16
       -> Int32
       -> IAgentCharacter a0
       -> IO Int32
moveTo x y lSpeed =
  method1 "MoveTo"
          [ inInt16 x
          , inInt16 y
          , inInt32 lSpeed
          ]
          outInt32

gestureAt :: Int16
          -> Int16
          -> IAgentCharacter a0
          -> IO Int32
gestureAt x y =
  method1 "GestureAt"
          [ inInt16 x
          , inInt16 y
          ]
          outInt32

getMoveCause :: IAgentCharacter a0
             -> IO Int32
getMoveCause =
  method1 "GetMoveCause"
          []
          outInt32

getVisibilityCause :: IAgentCharacter a0
                   -> IO Int32
getVisibilityCause =
  method1 "GetVisibilityCause"
          []
          outInt32

hasOtherClients :: IAgentCharacter a0
                -> IO Int32
hasOtherClients =
  method1 "HasOtherClients"
          []
          outInt32

setSoundEffectsOn :: Int32
                  -> IAgentCharacter a0
                  -> IO ()
setSoundEffectsOn bOn =
  method0 "SetSoundEffectsOn"
          [inInt32 bOn]

getSoundEffectsOn :: IAgentCharacter a0
                  -> IO Int32
getSoundEffectsOn =
  method1 "GetSoundEffectsOn"
          []
          outInt32

setName :: String
        -> IAgentCharacter a0
        -> IO ()
setName bszName =
  method0 "SetName"
          [inString bszName]

setDescription :: String
               -> IAgentCharacter a0
               -> IO ()
setDescription bszDescription =
  method0 "SetDescription"
          [inString bszDescription]

getExtraData :: IAgentCharacter a0
             -> IO String
getExtraData =
  method1 "GetExtraData"
          []
          outString

-- --------------------------------------------------
-- 
-- interface IAgentCharacterEx
-- 
-- --------------------------------------------------
data IAgentCharacterEx_ a = IAgentCharacterEx__ 
type IAgentCharacterEx a = IAgentCharacter (IAgentCharacterEx_ a)
iidIAgentCharacterEx :: IID (IAgentCharacterEx ())
iidIAgentCharacterEx =
  mkIID "{98BBE491-2EED-11D1-ACAC-00C04FD97575}"

showPopupMenu :: Int16
              -> Int16
              -> IAgentCharacterEx a0
              -> IO ()
showPopupMenu x y =
  method0 "ShowPopupMenu"
          [ inInt16 x
          , inInt16 y
          ]

setAutoPopupMenu :: Int32
                 -> IAgentCharacterEx a0
                 -> IO ()
setAutoPopupMenu bAutoPopupMenu =
  method0 "SetAutoPopupMenu"
          [inInt32 bAutoPopupMenu]

getAutoPopupMenu :: IAgentCharacterEx a0
                 -> IO Int32
getAutoPopupMenu =
  method1 "GetAutoPopupMenu"
          []
          outInt32

getHelpFileName :: IAgentCharacterEx a0
                -> IO String
getHelpFileName =
  method1 "GetHelpFileName"
          []
          outString

setHelpFileName :: String
                -> IAgentCharacterEx a0
                -> IO ()
setHelpFileName bszName =
  method0 "SetHelpFileName"
          [inString bszName]

setHelpModeOn :: Int32
              -> IAgentCharacterEx a0
              -> IO ()
setHelpModeOn bHelpModeOn =
  method0 "SetHelpModeOn"
          [inInt32 bHelpModeOn]

getHelpModeOn :: IAgentCharacterEx a0
              -> IO Int32
getHelpModeOn =
  method1 "GetHelpModeOn"
          []
          outInt32

setHelpContextID1 :: Int32
                  -> IAgentCharacterEx a0
                  -> IO ()
setHelpContextID1 ulID =
  method0 "SetHelpContextID"
          [inInt32 ulID]

getHelpContextID1 :: IAgentCharacterEx a0
                  -> IO Int32
getHelpContextID1 =
  method1 "GetHelpContextID"
          []
          outInt32

getActive :: IAgentCharacterEx a0
          -> IO Int16
getActive =
  method1 "GetActive"
          []
          outInt16

listen :: Int32
       -> IAgentCharacterEx a0
       -> IO ()
listen bListen =
  method0 "Listen"
          [inInt32 bListen]

setLanguageID :: Int32
              -> IAgentCharacterEx a0
              -> IO ()
setLanguageID langid =
  method0 "SetLanguageID"
          [inInt32 langid]

getLanguageID :: IAgentCharacterEx a0
              -> IO Int32
getLanguageID =
  method1 "GetLanguageID"
          []
          outInt32

getTTSModeID :: IAgentCharacterEx a0
             -> IO String
getTTSModeID =
  method1 "GetTTSModeID"
          []
          outString

setTTSModeID :: String
             -> IAgentCharacterEx a0
             -> IO ()
setTTSModeID bszModeID =
  method0 "SetTTSModeID"
          [inString bszModeID]

getSRModeID :: IAgentCharacterEx a0
            -> IO String
getSRModeID =
  method1 "GetSRModeID"
          []
          outString

setSRModeID :: String
            -> IAgentCharacterEx a0
            -> IO ()
setSRModeID bszModeID =
  method0 "SetSRModeID"
          [inString bszModeID]

getGUID :: IAgentCharacterEx a0
        -> IO String
getGUID =
  method1 "GetGUID"
          []
          outString

getOriginalSize :: IAgentCharacterEx a0
                -> IO (Int32, Int32)
getOriginalSize =
  method2 "GetOriginalSize"
          []
          outInt32
          outInt32

think :: String
      -> IAgentCharacterEx a0
      -> IO Int32
think bszText =
  method1 "Think"
          [inString bszText]
          outInt32

getVersion :: IAgentCharacterEx a0
           -> IO (Int16, Int16)
getVersion =
  method2 "GetVersion"
          []
          outInt16
          outInt16

getAnimationNames :: IAgentCharacterEx a0
                  -> IO (IUnknown ())
getAnimationNames =
  method1 "GetAnimationNames"
          []
          outIUnknown

getSRStatus :: IAgentCharacterEx a0
            -> IO Int32
getSRStatus =
  method1 "GetSRStatus"
          []
          outInt32

-- --------------------------------------------------
-- 
-- interface IAgentEx
-- 
-- --------------------------------------------------
data IAgentEx_ a = IAgentEx__ 
type IAgentEx a = IAgent (IAgentEx_ a)
iidIAgentEx :: IID (IAgentEx ())
iidIAgentEx = mkIID "{48D12BA0-5B77-11D1-9EC1-00C04FD7081F}"

getCharacterEx :: Int32
               -> IAgentEx a0
               -> IO (IAgentCharacterEx ())
getCharacterEx dwCharID =
  method1 "GetCharacterEx"
          [inInt32 dwCharID]
          outIDispatch

getVersion0 :: IAgentEx a0
            -> IO (Int16, Int16)
getVersion0 =
  method2 "GetVersion"
          []
          outInt16
          outInt16

showDefaultCharacterProperties :: Int16
                               -> Int16
                               -> Int32
                               -> IAgentEx a0
                               -> IO ()
showDefaultCharacterProperties x y bUseDefaultPosition =
  method0 "ShowDefaultCharacterProperties"
          [ inInt16 x
          , inInt16 y
          , inInt32 bUseDefaultPosition
          ]

-- --------------------------------------------------
-- 
-- interface IAgentNotifySink
-- 
-- --------------------------------------------------
data IAgentNotifySink_ a = IAgentNotifySink__ 
type IAgentNotifySink a = IDispatch (IAgentNotifySink_ a)
iidIAgentNotifySink :: IID (IAgentNotifySink ())
iidIAgentNotifySink =
  mkIID "{00D18159-8466-11D0-AC63-00C04FD97575}"

command :: Int32
        -> IUnknown a1
        -> IAgentNotifySink a0
        -> IO ()
command dwCommandID punkUserInput =
  method0 "Command"
          [ inInt32 dwCommandID
          , inIUnknown punkUserInput
          ]

activateInputState :: Int32
                   -> Int32
                   -> IAgentNotifySink a0
                   -> IO ()
activateInputState dwCharID bActivated =
  method0 "ActivateInputState"
          [ inInt32 dwCharID
          , inInt32 bActivated
          ]

restart :: IAgentNotifySink a0
        -> IO ()
restart =
  method0 "Restart"
          []

shutdown :: IAgentNotifySink a0
         -> IO ()
shutdown =
  method0 "Shutdown"
          []

visibleState :: Int32
             -> Int32
             -> Int32
             -> IAgentNotifySink a0
             -> IO ()
visibleState dwCharID bVisible dwCause =
  method0 "VisibleState"
          [ inInt32 dwCharID
          , inInt32 bVisible
          , inInt32 dwCause
          ]

click :: Int32
      -> Int16
      -> Int32
      -> Int32
      -> IAgentNotifySink a0
      -> IO ()
click dwCharID fwKeys x y =
  method0 "Click"
          [ inInt32 dwCharID
          , inInt16 fwKeys
          , inInt32 x
          , inInt32 y
          ]

dblClick :: Int32
         -> Int16
         -> Int32
         -> Int32
         -> IAgentNotifySink a0
         -> IO ()
dblClick dwCharID fwKeys x y =
  method0 "DblClick"
          [ inInt32 dwCharID
          , inInt16 fwKeys
          , inInt32 x
          , inInt32 y
          ]

dragStart :: Int32
          -> Int16
          -> Int32
          -> Int32
          -> IAgentNotifySink a0
          -> IO ()
dragStart dwCharID fwKeys x y =
  method0 "DragStart"
          [ inInt32 dwCharID
          , inInt16 fwKeys
          , inInt32 x
          , inInt32 y
          ]

dragComplete :: Int32
             -> Int16
             -> Int32
             -> Int32
             -> IAgentNotifySink a0
             -> IO ()
dragComplete dwCharID fwKeys x y =
  method0 "DragComplete"
          [ inInt32 dwCharID
          , inInt16 fwKeys
          , inInt32 x
          , inInt32 y
          ]

requestStart :: Int32
             -> IAgentNotifySink a0
             -> IO ()
requestStart dwRequestID =
  method0 "RequestStart"
          [inInt32 dwRequestID]

requestComplete :: Int32
                -> Int32
                -> IAgentNotifySink a0
                -> IO ()
requestComplete dwRequestID hrStatus =
  method0 "RequestComplete"
          [ inInt32 dwRequestID
          , inInt32 hrStatus
          ]

bookMark :: Int32
         -> IAgentNotifySink a0
         -> IO ()
bookMark dwBookMarkID =
  method0 "BookMark"
          [inInt32 dwBookMarkID]

idle :: Int32
     -> Int32
     -> IAgentNotifySink a0
     -> IO ()
idle dwCharID bStart =
  method0 "Idle"
          [ inInt32 dwCharID
          , inInt32 bStart
          ]

move :: Int32
     -> Int32
     -> Int32
     -> Int32
     -> IAgentNotifySink a0
     -> IO ()
move dwCharID x y dwCause =
  method0 "Move"
          [ inInt32 dwCharID
          , inInt32 x
          , inInt32 y
          , inInt32 dwCause
          ]

size :: Int32
     -> Int32
     -> Int32
     -> IAgentNotifySink a0
     -> IO ()
size dwCharID lWidth lHeight =
  method0 "Size"
          [ inInt32 dwCharID
          , inInt32 lWidth
          , inInt32 lHeight
          ]

balloonVisibleState :: Int32
                    -> Int32
                    -> IAgentNotifySink a0
                    -> IO ()
balloonVisibleState dwCharID bVisible =
  method0 "BalloonVisibleState"
          [ inInt32 dwCharID
          , inInt32 bVisible
          ]

-- --------------------------------------------------
-- 
-- interface IAgentNotifySinkEx
-- 
-- --------------------------------------------------
data IAgentNotifySinkEx_ a = IAgentNotifySinkEx__ 
type IAgentNotifySinkEx a = IAgentNotifySink (IAgentNotifySinkEx_ a)
iidIAgentNotifySinkEx :: IID (IAgentNotifySinkEx ())
iidIAgentNotifySinkEx =
  mkIID "{08C75162-3C9C-11D1-91FE-00C04FD701A5}"

helpComplete :: Int32
             -> Int32
             -> Int32
             -> IAgentNotifySinkEx a0
             -> IO ()
helpComplete dwCharID dwCommandID dwCause =
  method0 "HelpComplete"
          [ inInt32 dwCharID
          , inInt32 dwCommandID
          , inInt32 dwCause
          ]

listeningState :: Int32
               -> Int32
               -> Int32
               -> IAgentNotifySinkEx a0
               -> IO ()
listeningState dwCharID bListening dwCause =
  method0 "ListeningState"
          [ inInt32 dwCharID
          , inInt32 bListening
          , inInt32 dwCause
          ]

defaultCharacterChange :: String
                       -> IAgentNotifySinkEx a0
                       -> IO ()
defaultCharacterChange bszGUID =
  method0 "DefaultCharacterChange"
          [inString bszGUID]

agentPropertyChange :: IAgentNotifySinkEx a0
                    -> IO ()
agentPropertyChange =
  method0 "AgentPropertyChange"
          []

activeClientChange :: Int32
                   -> Int32
                   -> IAgentNotifySinkEx a0
                   -> IO ()
activeClientChange dwCharID lStatus =
  method0 "ActiveClientChange"
          [ inInt32 dwCharID
          , inInt32 lStatus
          ]

-- --------------------------------------------------
-- 
-- interface IAgentCommandWindow
-- 
-- --------------------------------------------------
data IAgentCommandWindow_ a = IAgentCommandWindow__ 
type IAgentCommandWindow a = IDispatch (IAgentCommandWindow_ a)
iidIAgentCommandWindow :: IID (IAgentCommandWindow ())
iidIAgentCommandWindow =
  mkIID "{6D0ECB23-9968-11D0-AC6E-00C04FD97575}"

setVisible3 :: Int32
            -> IAgentCommandWindow a0
            -> IO ()
setVisible3 bVisible =
  method0 "SetVisible"
          [inInt32 bVisible]

getVisible4 :: IAgentCommandWindow a0
            -> IO Int32
getVisible4 =
  method1 "GetVisible"
          []
          outInt32

getPosition1 :: IAgentCommandWindow a0
             -> IO (Int32, Int32)
getPosition1 =
  method2 "GetPosition"
          []
          outInt32
          outInt32

getSize1 :: IAgentCommandWindow a0
         -> IO (Int32, Int32)
getSize1 =
  method2 "GetSize"
          []
          outInt32
          outInt32


