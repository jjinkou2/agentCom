-- Automatically generated by HaskellDirect (ihc.exe), version 0.21
-- Created: 22:29 ope, Sunday 05 August, 2012
-- Command line: -fno-qualified-names -fno-imports -fno-export-lists -fout-pointers-are-not-refs -c agentsvrext.IDL -o agentsvrext.hs

module Agentsvrext where


libidAgentServerExtensions :: LIBID
libidAgentServerExtensions =
  mkLIBID "{D6589123-FC70-11D0-AC94-00C04FD97575}"

-- --------------------------------------------------
-- 
-- interface IAgentExtension
-- 
-- --------------------------------------------------
data IAgentExtension_ a = IAgentExtension__ 
type IAgentExtension a = IUnknown (IAgentExtension_ a)
iidIAgentExtension :: IID (IAgentExtension ())
iidIAgentExtension = mkIID "{64A89600-E8F1-11D0-AC8E-00C04FD97575}"

setAgent :: IUnknown a1
         -> IAgentExtension a0
         -> IO ()
setAgent punkAgent iptr =
  do
    punkAgent <- marshallIUnknown punkAgent
    invokeAndCheck (\ methPtr iptr -> withForeignPtr punkAgent (\ punkAgent -> prim_AgentServerExtensions_setAgent methPtr iptr punkAgent)) 3 iptr

foreign import stdcall "dynamic" prim_AgentServerExtensions_setAgent :: Ptr () -> Ptr () -> Ptr (IUnknown a) -> IO Int32
-- --------------------------------------------------
-- 
-- interface IAgentExt
-- 
-- --------------------------------------------------
data IAgentExt_ a = IAgentExt__ 
type IAgentExt a = IDispatch (IAgentExt_ a)
iidIAgentExt :: IID (IAgentExt ())
iidIAgentExt = mkIID "{D6589121-FC70-11D0-AC94-00C04FD97575}"

loadExtension :: Int32
              -> Int32
              -> Int32
              -> Int32
              -> IAgentExt a0
              -> IO Int32
loadExtension dwClsId0 dwClsId1 dwClsId2 dwClsId3 =
  method1 "LoadExtension"
          [ inInt32 dwClsId0
          , inInt32 dwClsId1
          , inInt32 dwClsId2
          , inInt32 dwClsId3
          ]
          outInt32

getExtension :: Int32
             -> IAgentExt a0
             -> IO (IDispatch ())
getExtension dwID =
  method1 "GetExtension"
          [inInt32 dwID]
          outIDispatch

unloadExtension :: Int32
                -> IAgentExt a0
                -> IO ()
unloadExtension dwID =
  method0 "UnloadExtension"
          [inInt32 dwID]


